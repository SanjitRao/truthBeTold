return {
    -- filter: pattern or table of patterns; file paths to include
    filter = nil,

    -- exclude: pattern or table of patterns; file paths to exclude
    exclude = { 'test', 'build', 'doc/*', 'LICENSE.md', '*.txt', 'init.md'},

    -- tocLevel: string; level of detail for table of contents for inline docs: 'class', 'function' or 'none'
    tocLevel = 'function',

    -- tocLevelTopSection: integer; max depth of table of contents for standalone .md docs
    --tocLevelTopSection = nil,

    -- sectionOrder: table; paths of .md files in order of priority
    --sectionOrder = nil,

    -- tocIncludeFilenames: boolean; whether to include filenames as a top level in the table of contents
    --tocIncludeFilenames = false,

    -- mathematics: boolean; whether to process mathematics blocks
    mathematics = true,

    -- packageName: string; override the inferred package namespace
    packageName = "onmt",

    -- githubURL: string; $githubUser/$githubProject - used for generating links, if present
    githubURL = "opennmt/opennmt",

    -- includeLocal: boolean; whether to include local functions
    includeLocal = false,

    -- includePrivate: boolean; whether to include private functions (i.e. those that begin with an underscore)
    --includePrivate = false,

    -- section: string; name of the section under which this package should be grouped in the main menu
    --section = Miscellaneous,
}